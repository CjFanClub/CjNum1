name: Production Release

on:
  workflow_dispatch:

permissions:
  contents: write
  pull-requests: write

jobs:
  update_config:
    runs-on: ubuntu-latest
    # Job 全体のタイムアウト時間を指定
    timeout-minutes: 5

    steps:
      - name: Set up Git identity
        run: |
          git config --global user.name ${{ secrets.GIT_USER_NAME }}
          git config --global user.email ${{ secrets.GIT_USER_EMAIL }}

      # 開発用ブランチを指定
      - name: checkout
        uses: actions/checkout@v4
        with:
          ref: "develop"

      - name: Check if develop branch has new commits
        id: check_commits
        run: |
          git fetch origin
          DIFF=$(git diff --name-only origin/develop..origin/staging)
          if [ -z "$DIFF" ]; then
            echo "has_commits=false" >> $GITHUB_ENV
          else
            echo "has_commits=true" >> $GITHUB_ENV
          fi

      - name: Create pull request and tag
        if: env.has_commits == 'true'
        shell: bash
        # まずDraft状態で作成する。
        run: |
          PR_TITLE="Release at $(TZ='JST-9' date --date "8 days" +%Y.%m.%d)"
          TAG_VERSION=express_$(date --date "8 days" +%Y%m%d_%H%M%S)
          echo "TAG_VERSION=express_$(date --date "8 days" +%Y%m%d)" >> $GITHUB_ENV
          ASSIGNEE="ji-liu"
          REVIEWER="ji-liu"

          gh pr create -d --base "staging" --title "$PR_TITLE" --body "Auto-generated pull request, not generated " --assignee "$ASSIGNEE" --reviewer "$REVIEWER"
          git tag $TAG_VERSION -m "Release $TAG_VERSION"
          git push origin $TAG_VERSION

        env:
          GITHUB_TOKEN: ${{ secrets.ACCESS_TOKEN }}

      - name: create release and release note
        if: env.has_commits == 'true'
        # run: |
        #   RELEASE_NAME=express_$(date --date "8 days" +%Y%m%d)
        #   gh release create $TAG_VERSION -t "$RELEASE_NAME" -n --draft

        uses: release-drafter/release-drafter@v5
        with:
          tag: ${{ env.TAG_VERSION }}
          name: ${{ env.TAG_VERSION }}
          publish: false

        env:
          GITHUB_TOKEN: ${{ secrets.ACCESS_TOKEN }}
      # - name: Generate Release Notes
      #   run: |
      #     git log --pretty=format:"%s" $(git describe --tags --abbrev=0)..HEAD >> release_notes.md
      #     cat release_template.md release_notes.md > combined_release_notes.md